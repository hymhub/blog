"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[356],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>k});var l=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,l,s=function(e,n){if(null==e)return{};var t,l,s={},o=Object.keys(e);for(l=0;l<o.length;l++)t=o[l],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)t=o[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var u=l.createContext({}),c=function(e){var n=l.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},i=function(e){var n=c(e.components);return l.createElement(u.Provider,{value:n},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},g=l.forwardRef((function(e,n){var t=e.components,s=e.mdxType,o=e.originalType,u=e.parentName,i=a(e,["components","mdxType","originalType","parentName"]),p=c(t),g=s,k=p["".concat(u,".").concat(g)]||p[g]||h[g]||o;return t?l.createElement(k,r(r({ref:n},i),{},{components:t})):l.createElement(k,r({ref:n},i))}));function k(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var o=t.length,r=new Array(o);r[0]=g;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a[p]="string"==typeof e?e:s,r[1]=a;for(var c=2;c<o;c++)r[c]=t[c];return l.createElement.apply(null,r)}return l.createElement.apply(null,t)}g.displayName="MDXCreateElement"},1755:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var l=t(7462),s=(t(7294),t(3905));const o={slug:"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305",title:"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305",authors:["hyminghan"],tags:["nodejs","\u524d\u7aef\u63d2\u4ef6"]},r=void 0,a={permalink:"/blog/blog/Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305",source:"@site/blog/2023-05-26-Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305/index.md",title:"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305",description:"\u524d\u8a00",date:"2023-05-26T00:00:00.000Z",formattedDate:"2023\u5e745\u670826\u65e5",tags:[{label:"nodejs",permalink:"/blog/blog/tags/nodejs"},{label:"\u524d\u7aef\u63d2\u4ef6",permalink:"/blog/blog/tags/\u524d\u7aef\u63d2\u4ef6"}],readingTime:9.185,hasTruncateMarker:!1,authors:[{name:"hyminghan",title:"\u524d\u7aef\u5de5\u7a0b\u5e08",url:"https://github.com/hymhub",imageURL:"https://github.com/hymhub.png",key:"hyminghan"}],frontMatter:{slug:"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305",title:"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305",authors:["hyminghan"],tags:["nodejs","\u524d\u7aef\u63d2\u4ef6"]},nextItem:{title:"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3",permalink:"/blog/blog/React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3"}},u={authorsImageUrls:[void 0]},c=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"\u63d2\u4ef6\u94fe\u63a5",id:"\u63d2\u4ef6\u94fe\u63a5",level:2},{value:"\u6548\u679c\u6f14\u793a",id:"\u6548\u679c\u6f14\u793a",level:2},{value:"\u6b63\u5e38\u7ffb\u8bd1\u6548\u679c:",id:"\u6b63\u5e38\u7ffb\u8bd1\u6548\u679c",level:3},{value:"\u538b\u529b\u6d4b\u8bd5(1\u5206\u949f\u5185\u751f\u6210100\u79cd\u8bed\u8a00\u5305):",id:"\u538b\u529b\u6d4b\u8bd51\u5206\u949f\u5185\u751f\u6210100\u79cd\u8bed\u8a00\u5305",level:3},{value:"\u539f\u7406",id:"\u539f\u7406",level:2},{value:"\u5b89\u88c5\u4f9d\u8d56",id:"\u5b89\u88c5\u4f9d\u8d56",level:3},{value:"\u7f16\u5199\u7ffb\u8bd1\u811a\u672c",id:"\u7f16\u5199\u7ffb\u8bd1\u811a\u672c",level:3},{value:"\u7f16\u5199\u6241\u5e73\u5316\u548c\u53cd\u6241\u5e73\u5316\u65b9\u6cd5",id:"\u7f16\u5199\u6241\u5e73\u5316\u548c\u53cd\u6241\u5e73\u5316\u65b9\u6cd5",level:3},{value:"\u7ffb\u8bd1\u63d0\u901f",id:"\u7ffb\u8bd1\u63d0\u901f",level:3},{value:"\u7ed3\u8bed",id:"\u7ed3\u8bed",level:2}],i={toc:c},p="wrapper";function h(e){let{components:n,...o}=e;return(0,s.kt)(p,(0,l.Z)({},i,o,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,s.kt)("p",null,"\u5728\u9700\u8981\u56fd\u9645\u5316\u7684\u9879\u76ee\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u5199\u5b8c\u4ee3\u7801\u540e\u9700\u8981\u5c06\u6587\u6848\u7ffb\u8bd1\u5230\u5176\u4ed6\u5f88\u591a\u56fd\u5bb6\u8bed\u8a00\uff0c\u4eba\u5de5\u7ffb\u8bd1\u518d\u590d\u5236\u6587\u6848\u5230\u5bf9\u5e94 json \u6216 js / ts \u6587\u4ef6\uff0c\u8fd9\u6837\u5c06\u4f1a\u6d6a\u8d39\u5927\u91cf\u65f6\u95f4\u4e14\u975e\u5e38\u67af\u71e5\uff0c\u6240\u4ee5\u5f88\u6709\u5fc5\u8981\u5f00\u53d1\u4e00\u6b3e node \u63d2\u4ef6\uff0c\u5c06\u8fd9\u4e9b\u91cd\u590d\u4e4f\u5473\u7684\u5de5\u4f5c\u4ea4\u7ed9\u673a\u5668\u5b8c\u6210\u3002\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5148\u5c55\u793a\u6210\u54c1\u518d\u8bb2\u539f\u7406"),(0,s.kt)("h2",{id:"\u63d2\u4ef6\u94fe\u63a5"},"\u63d2\u4ef6\u94fe\u63a5"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/hymhub/language-translate"},"https://github.com/hymhub/language-translate")),(0,s.kt)("p",null,"language-translate \u662f\u4e00\u6b3e\u57fa\u4e8e Google \u7ffb\u8bd1\u5728\u7ebf\u8f6c\u6362 ts/js/json \u591a\u8bed\u8a00\u6587\u4ef6\u5e76\u6279\u91cf\u751f\u6210\u6216\u63d2\u5165\u6307\u5b9a\u6587\u4ef6\u7684\u63d2\u4ef6\uff0c\u652f\u6301\u589e\u91cf\u66f4\u65b0\uff0c\u53ef\u4f7f\u7528 bash \u7ffb\u8bd1\u5355\u4e2a\u6587\u4ef6\uff0c\u4e5f\u80fd\u96c6\u6210\u5728\u9879\u76ee\u4e2d\u6301\u7eed\u6279\u91cf\u7ffb\u8bd1\uff0c\u652f\u6301\u5355\u6587\u4ef6\u8f6c\u5355\u6587\u4ef6\uff0c\u5355\u6587\u4ef6\u8f6c\u591a\u6587\u4ef6\uff0c\u591a\u6587\u4ef6\u8f6c\u591a\u6587\u4ef6\uff0c\u591a\u6587\u4ef6\u8f6c\u5355\u6587\u4ef6"),(0,s.kt)("h2",{id:"\u6548\u679c\u6f14\u793a"},"\u6548\u679c\u6f14\u793a"),(0,s.kt)("h3",{id:"\u6b63\u5e38\u7ffb\u8bd1\u6548\u679c"},"\u6b63\u5e38\u7ffb\u8bd1\u6548\u679c:"),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(5457).Z,width:"1492",height:"954"})),(0,s.kt)("h3",{id:"\u538b\u529b\u6d4b\u8bd51\u5206\u949f\u5185\u751f\u6210100\u79cd\u8bed\u8a00\u5305"},"\u538b\u529b\u6d4b\u8bd5(1\u5206\u949f\u5185\u751f\u6210100\u79cd\u8bed\u8a00\u5305):"),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(5275).Z,width:"1280",height:"720"})),(0,s.kt)("h2",{id:"\u539f\u7406"},"\u539f\u7406"),(0,s.kt)("p",null,"\u63d2\u4ef6\u539f\u7406\u6bd4\u8f83\u7b80\u5355\uff0c\u6838\u5fc3\u662f\u4f7f\u7528 node \u8bfb\u53d6\u6587\u6848\u6587\u4ef6\uff0c\u518d\u5229\u7528 google \u7ffb\u8bd1 API \u7ffb\u8bd1\u6587\u6848\u540e\u6700\u7ec8\u751f\u6210\u6216\u5199\u5165\u7ed3\u679c\uff0c\u5176\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ffb\u8bd1\u524d\u6587\u6848\u5408\u5e76\u548c\u7ffb\u8bd1\u540e\u6587\u6848\u62c6\u5206\u7ec6\u8282\uff0c\u6b64\u64cd\u4f5c\u662f\u7ffb\u8bd1\u901f\u5ea6\u63d0\u5347\u7684\u5173\u952e"),(0,s.kt)("p",null,"\u4e0b\u9762\u5199\u4e00\u4e2a\u7b80\u6613\u7248\u65b9\u4fbf\u7406\u89e3\u539f\u7406"),(0,s.kt)("h3",{id:"\u5b89\u88c5\u4f9d\u8d56"},"\u5b89\u88c5\u4f9d\u8d56"),(0,s.kt)("p",null,"\u9996\u5148\u5b89\u88c5\u4ee5\u4e0b 2 \u4e2a\u4f9d\u8d56\uff1a"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"@vitalets/google-translate-api"),"\uff1a\u7528\u4e8e\u7ffb\u8bd1\u6587\u6848"),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("inlineCode",{parentName:"li"},"tunnel"),"\uff1a\u7528\u4e8e\u7f51\u7edc\u4ee3\u7406\uff08\u5927\u9646\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528 Google API\uff09")),(0,s.kt)("p",null,"\u6ce8\u610f\u7248\u672c\uff0ces6 \u548c conmonjs \u6a21\u5757\u5316\u4e0b\u8f7d\u7684\u7248\u672c\u4e0d\u540c\uff0c\u65b9\u4fbf\u6f14\u793a\uff0c\u4ee5 conmonjs \u4e3a\u4f8b"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @vitalets/google-translate-api@8.0.0\nnpm i tunnel@0.0.6\n")),(0,s.kt)("h3",{id:"\u7f16\u5199\u7ffb\u8bd1\u811a\u672c"},"\u7f16\u5199\u7ffb\u8bd1\u811a\u672c"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs')\nconst tunnel = require('tunnel')\nconst google = require('@vitalets/google-translate-api')\n\nconst googleTranslator = (text) => google(\n  text,\n  { from: 'en', to: 'zh-CN' },\n  {\n    agent: tunnel.httpsOverHttp({\n      proxy: {\n        host: '127.0.0.1',// \u4ee3\u7406 ip\n        port: 7890, // \u4ee3\u7406 port\n        headers: {\n          'User-Agent': 'Node'\n        }\n      }\n    })\n  }\n)\n// \u8bfb\u53d6 json \u6587\u6848\u6587\u4ef6\nconst sourceJson = require('./en.json')\n// \u5b9a\u4e49\u7ffb\u8bd1\u65b9\u6cd5\nconst translateRun = async (inputJson) => {\n  const sourceKeyValues = Object.entries(inputJson)\n  const resultJson = {}\n  for (let i = 0; i < sourceKeyValues.length; i++) {\n    const [key, value] = sourceKeyValues[i]\n    const { text } = await googleTranslator(value)\n    resultJson[key] = text\n  }\n  return resultJson\n}\n// \u5c06\u7ffb\u8bd1\u7ed3\u679c\u5199\u5165\u786c\u76d8\ntranslateRun(sourceJson).then(resultJson => {\n  fs.writeFileSync('./zh.json', JSON.stringify(resultJson))\n})\n")),(0,s.kt)("p",null,"\u5c06\u6587\u6848\u653e\u5165 en.json \u4f8b\u5982\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hello": "hello"\n}\n')),(0,s.kt)("p",null,"\u6267\u884c\u6b64\u811a\u672c\u5c31\u4f1a\u53d1\u73b0\u76ee\u5f55\u4e0b\u751f\u6210\u4e86 zh.json \u7684\u7ffb\u8bd1\u7ed3\u679c\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{"hello":"\u4f60\u597d"}\n')),(0,s.kt)("p",null,"\u4f46\u662f\u73b0\u5728\u8fd8\u4e0d\u80fd\u9012\u5f52\u7ffb\u8bd1 json \u5185\u5bb9\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a key \u90fd\u8c03\u7528\u4e86\u4e00\u6b21\u63a5\u53e3"),(0,s.kt)("p",null,"\u5148\u5b8c\u6210\u9012\u5f52\u529f\u80fd\uff0c\u9012\u5f52\u7ffb\u8bd1\u7684\u5b9e\u73b0\u65b9\u6848\u6709\u591a\u79cd\uff0c\u8003\u8651\u5230\u540e\u671f\u6587\u6848\u5408\u5e76/\u62c6\u5206\u51cf\u5c11 API \u8c03\u7528\u9891\u7387\uff0c\u8fd9\u91cc\u91c7\u7528 json \u6241\u5e73\u5316\u7684\u65b9\u6cd5"),(0,s.kt)("h3",{id:"\u7f16\u5199\u6241\u5e73\u5316\u548c\u53cd\u6241\u5e73\u5316\u65b9\u6cd5"},"\u7f16\u5199\u6241\u5e73\u5316\u548c\u53cd\u6241\u5e73\u5316\u65b9\u6cd5"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const flattenObject = (obj, prefix = '') => {\n  let result = {}\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const nestedKey = prefix.length > 0 ? `${prefix}/${key}` : key\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        const nestedObj = flattenObject(obj[key], nestedKey)\n        result = { ...result, ...nestedObj }\n      } else {\n        result[nestedKey] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\nconst unflattenObject = (obj) => {\n  const result = {}\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const nestedKeys = key.split('/')\n      let nestedObj = result\n      for (let i = 0; i < nestedKeys.length; i++) {\n        const nestedKey = nestedKeys[i]\n        if (!Object.prototype.hasOwnProperty.call(nestedObj, nestedKey)) {\n          nestedObj[nestedKey] = {}\n        }\n        if (i === nestedKeys.length - 1) {\n          nestedObj[nestedKey] = obj[key]\n        }\n        nestedObj = nestedObj[nestedKey]\n      }\n    }\n  }\n  return result\n}\n\n")),(0,s.kt)("p",null,"\u6241\u5e73\u5316\u65b9\u6cd5\u7684\u5982\u4f55\u5b9e\u73b0\u9012\u5f52\u7ffb\u8bd1\uff1f\u4f8b\u5982\u4ece\u4f20\u5165\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const inputJson = {\n  "hello": "hello",\n  "colors": {\n    "red": "red"\n  }\n}\nflattenObject(inputJson) // { hello: \'hello\', \'colors/red\': \'red\' }\n// \u6b64\u65f6\u8fdb\u884c\u7ffb\u8bd1\uff0c\u4f8b\u5982\u7ed3\u679c\u662f { hello: \'\u4f60\u597d\', \'colors/red\': \'\u7ea2\u8272\u7684\' }\n// \u518d\u8fdb\u884c\u53cd\u6241\u5e73\u5316\nunflattenObject(resultJson) // {"hello":"\u4f60\u597d","colors":{"red":"\u7ea2\u8272\u7684"}}\n')),(0,s.kt)("p",null,"\u641e\u61c2\u6241\u5e73\u5316\u539f\u7406\u540e\u63a5\u7740\u6539\u9020 ",(0,s.kt)("inlineCode",{parentName:"p"},"translateRun")," \u65b9\u6cd5\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const translateRun = async (inputJson) => {\n  inputJson = flattenObject(inputJson)\n  const sourceKeyValues = Object.entries(inputJson)\n  const resultJson = {}\n  for (let i = 0; i < sourceKeyValues.length; i++) {\n    const [key, value] = sourceKeyValues[i]\n    const { text } = await googleTranslator(value)\n    resultJson[key] = text\n  }\n  return unflattenObject(resultJson)\n}\n")),(0,s.kt)("p",null,"\u73b0\u5728\u5df2\u7ecf\u80fd\u8fdb\u884c\u9012\u5f52\u7ffb\u8bd1\u4e86\uff0c\u63a5\u4e0b\u6765\u8fdb\u884c\u7ffb\u8bd1\u524d\u6587\u6848\u5408\u5e76\u548c\u7ffb\u8bd1\u540e\u6587\u6848\u62c6\u5206\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11 API \u8c03\u7528\u9891\u7387\uff0c\u4e5f\u662f\u5927\u5927\u63d0\u9ad8\u7ffb\u8bd1\u901f\u5ea6\u7684\u6838\u5fc3"),(0,s.kt)("h3",{id:"\u7ffb\u8bd1\u63d0\u901f"},"\u7ffb\u8bd1\u63d0\u901f"),(0,s.kt)("p",null,"\u7ee7\u7eed\u6539\u9020 ",(0,s.kt)("inlineCode",{parentName:"p"},"translateRun")," \u65b9\u6cd5\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const translateRun = async (inputJson) => {\n  inputJson = flattenObject(inputJson)\n  let chunkValuesLength = 0\n  let chunk = []\n  const chunks = []\n  const sourceKeyValues = Object.entries(inputJson)\n  sourceKeyValues.forEach(([key, value]) => {\n    // Google \u7ffb\u8bd1\u5355\u6b21\u6700\u5927\u5b57\u7b26\u957f\u5ea6 5000 \u5b57, 5 \u4e3a\u5360\u4f4d\u5206\u9694\u7b26\u957f\u5ea6\n    if (chunkValuesLength + value.length + 5 >= 5000) {\n      chunks.push(chunk)\n      chunkValuesLength = 0\n      chunk = []\n    } else {\n      chunk.push({ key, value })\n      chunkValuesLength += (value.length + 5)\n    }\n  })\n  if (chunk.length > 0) {// \u904d\u5386\u5b8c\u540e\u68c0\u67e5\u4e0d\u6ee1 5000 \u5b57\u7b26\u7684\u9057\u7559\n    chunks.push(chunk)\n    chunkValuesLength = 0\n    chunk = []\n  }\n  const resultJson = {}\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i]\n    const mergeText = chunk.map(v => v.value).join('\\n###\\n')// \u5408\u5e76\u6587\u6848\n    const { text } = await googleTranslator(mergeText)\n    const resultValues = text.split(/\\n *# *# *# *\\n/).map((v) => v.trim())// \u62c6\u5206\u6587\u6848\n    if (chunk.length !== resultValues.length) {\n      throw new Error('\u7ffb\u8bd1\u524d\u6587\u6848\u788e\u7247\u957f\u5ea6\u548c\u7ffb\u8bd1\u540e\u7684\u4e0d\u4e00\u81f4')\n    }\n    chunk.forEach(({ key }, index) => {\n      resultJson[key] = resultValues[index]\n    })\n  }\n  return unflattenObject(resultJson)\n}\n")),(0,s.kt)("p",null,"\u73b0\u5728\u653e\u5165\u5927\u91cf\u6587\u6848\u5728 en.json \u6587\u4ef6\uff0c\u6267\u884c\u7ffb\u8bd1\u811a\u672c\uff0c\u5047\u5982\u6587\u6848\u6709 1000 \u4e2a key \u539f\u672c\u9700\u8981\u8c03\u7528 1000 \u6b21\u63a5\u53e3\uff0c\u73b0\u5728\u4e0d\u5230 10 \u6b21\u751a\u81f3\u4e0d\u5230 5 \u6b21\u5373\u53ef\u7ffb\u8bd1\u5b8c\u6210\u3002"),(0,s.kt)("p",null,"\u5b8c\u6574 demo:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs')\nconst tunnel = require('tunnel')\nconst google = require('@vitalets/google-translate-api')\n\nconst flattenObject = (obj, prefix = '') => {\n  let result = {}\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const nestedKey = prefix.length > 0 ? `${prefix}/${key}` : key\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        const nestedObj = flattenObject(obj[key], nestedKey)\n        result = { ...result, ...nestedObj }\n      } else {\n        result[nestedKey] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\nconst unflattenObject = (obj) => {\n  const result = {}\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const nestedKeys = key.split('/')\n      let nestedObj = result\n      for (let i = 0; i < nestedKeys.length; i++) {\n        const nestedKey = nestedKeys[i]\n        if (!Object.prototype.hasOwnProperty.call(nestedObj, nestedKey)) {\n          nestedObj[nestedKey] = {}\n        }\n        if (i === nestedKeys.length - 1) {\n          nestedObj[nestedKey] = obj[key]\n        }\n        nestedObj = nestedObj[nestedKey]\n      }\n    }\n  }\n  return result\n}\n\nconst googleTranslator = (text) => google(\n  text,\n  { from: 'en', to: 'zh-CN' },\n  {\n    agent: tunnel.httpsOverHttp({\n      proxy: {\n        host: '127.0.0.1',// \u4ee3\u7406 ip\n        port: 7890, // \u4ee3\u7406 port\n        headers: {\n          'User-Agent': 'Node'\n        }\n      }\n    })\n  }\n)\n// \u8bfb\u53d6 json \u6587\u6848\u6587\u4ef6\nconst sourceJson = require('./en.json')\n// \u5b9a\u4e49\u7ffb\u8bd1\u65b9\u6cd5\nconst translateRun = async (inputJson) => {\n  inputJson = flattenObject(inputJson)\n  let chunkValuesLength = 0\n  let chunk = []\n  const chunks = []\n  const sourceKeyValues = Object.entries(inputJson)\n  sourceKeyValues.forEach(([key, value]) => {\n    // Google \u7ffb\u8bd1\u5355\u6b21\u6700\u5927\u5b57\u7b26\u957f\u5ea6 5000 \u5b57, 5 \u4e3a\u5360\u4f4d\u5206\u9694\u7b26\u957f\u5ea6\n    if (chunkValuesLength + value.length + 5 >= 5000) {\n      chunks.push(chunk)\n      chunkValuesLength = 0\n      chunk = []\n    } else {\n      chunk.push({ key, value })\n      chunkValuesLength += (value.length + 5)\n    }\n  })\n  if (chunk.length > 0) {// \u904d\u5386\u5b8c\u540e\u68c0\u67e5\u4e0d\u6ee1 5000 \u5b57\u7b26\u7684\u9057\u7559\n    chunks.push(chunk)\n    chunkValuesLength = 0\n    chunk = []\n  }\n  const resultJson = {}\n  for (let i = 0; i < chunks.length; i++) {\n    const chunk = chunks[i]\n    const mergeText = chunk.map(v => v.value).join('\\n###\\n')// \u5408\u5e76\u6587\u6848\n    const { text } = await googleTranslator(mergeText)\n    const resultValues = text.split(/\\n *# *# *# *\\n/).map((v) => v.trim())// \u62c6\u5206\u6587\u6848\n    if (chunk.length !== resultValues.length) {\n      throw new Error('\u7ffb\u8bd1\u524d\u6587\u6848\u788e\u7247\u957f\u5ea6\u548c\u7ffb\u8bd1\u540e\u7684\u4e0d\u4e00\u81f4')\n    }\n    chunk.forEach(({ key }, index) => {\n      resultJson[key] = resultValues[index]\n    })\n  }\n  return unflattenObject(resultJson)\n}\n// \u5c06\u7ffb\u8bd1\u7ed3\u679c\u5199\u5165\u786c\u76d8\ntranslateRun(sourceJson).then(resultJson => {\n  fs.writeFileSync('./zh.json', JSON.stringify(resultJson))\n})\n")),(0,s.kt)("h2",{id:"\u7ed3\u8bed"},"\u7ed3\u8bed"),(0,s.kt)("p",null,"\u6709\u4e86\u6838\u5fc3\u601d\u8def\uff0c\u5176\u4ed6\u7684\u5c31\u662f\u7ec6\u8282\u5b8c\u5584\u4ee5\u53ca\u4e0d\u65ad\u6392\u5751\u4e86\uff0c\u4f8b\u5982\u5408\u5e76\u62c6\u5206\u6587\u6848\u7684\u7279\u6b8a\u5b57\u7b26\u5728\u4e0d\u540c\u8bed\u8a00\u4f1a\u6709\u5f02\u5e38\uff0c\u6240\u4ee5\u9700\u8981\u6d4b\u8bd5\u51fa\u4e0d\u540c\u8bed\u8a00\u6240\u652f\u6301\u7684\u7279\u6b8a\u5b57\u7b26\u62c6\u5206\u65b9\u6cd5\uff0c\u5728\u7ffb\u8bd1\u65f6\u6839\u636e\u4e0d\u540c\u8bed\u8a00\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u5206\u5272\uff0c\u4ee5\u53ca\u65ad\u70b9\u518d\u7eed\uff08\u6587\u6848\u592a\u957f\uff0c\u7ffb\u8bd1\u4e2d\u65ad\u5bfc\u81f4\u6d6a\u8d39\u5df2\u7ffb\u8bd1\u7684\u6587\u6848\uff09\u3001\u589e\u91cf\u66f4\u65b0\u7b49\u7b49\uff0c\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u54e6~"))}h.isMDXComponent=!0},5457:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/demo1-30a7952e08dea5078244d74ed9001907.gif"},5275:(e,n,t)=>{t.d(n,{Z:()=>l});const l=t.p+"assets/images/demo2-e5562d5d24c04ee119a1710ce979453c.gif"}}]);