"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[577],{5530:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305","metadata":{"permalink":"/blog/blog/Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305","source":"@site/blog/2023-05-26-Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305/index.md","title":"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305","description":"\u524d\u8a00","date":"2023-05-26T00:00:00.000Z","formattedDate":"2023\u5e745\u670826\u65e5","tags":[{"label":"nodejs","permalink":"/blog/blog/tags/nodejs"},{"label":"\u524d\u7aef\u63d2\u4ef6","permalink":"/blog/blog/tags/\u524d\u7aef\u63d2\u4ef6"}],"readingTime":9.185,"hasTruncateMarker":false,"authors":[{"name":"hyminghan","title":"\u524d\u7aef\u5de5\u7a0b\u5e08","url":"https://github.com/hymhub","imageURL":"https://github.com/hymhub.png","key":"hyminghan"}],"frontMatter":{"slug":"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305","title":"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305","authors":["hyminghan"],"tags":["nodejs","\u524d\u7aef\u63d2\u4ef6"]},"nextItem":{"title":"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","permalink":"/blog/blog/React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3"}},"content":"## \u524d\u8a00\\n\u5728\u9700\u8981\u56fd\u9645\u5316\u7684\u9879\u76ee\u4e2d\u7ecf\u5e38\u4f1a\u9047\u5230\u5199\u5b8c\u4ee3\u7801\u540e\u9700\u8981\u5c06\u6587\u6848\u7ffb\u8bd1\u5230\u5176\u4ed6\u5f88\u591a\u56fd\u5bb6\u8bed\u8a00\uff0c\u4eba\u5de5\u7ffb\u8bd1\u518d\u590d\u5236\u6587\u6848\u5230\u5bf9\u5e94 json \u6216 js / ts \u6587\u4ef6\uff0c\u8fd9\u6837\u5c06\u4f1a\u6d6a\u8d39\u5927\u91cf\u65f6\u95f4\u4e14\u975e\u5e38\u67af\u71e5\uff0c\u6240\u4ee5\u5f88\u6709\u5fc5\u8981\u5f00\u53d1\u4e00\u6b3e node \u63d2\u4ef6\uff0c\u5c06\u8fd9\u4e9b\u91cd\u590d\u4e4f\u5473\u7684\u5de5\u4f5c\u4ea4\u7ed9\u673a\u5668\u5b8c\u6210\u3002\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5148\u5c55\u793a\u6210\u54c1\u518d\u8bb2\u539f\u7406\\n\\n## \u63d2\u4ef6\u94fe\u63a5\\n<https://github.com/hymhub/language-translate>\\n\\nlanguage-translate \u662f\u4e00\u6b3e\u57fa\u4e8e Google \u7ffb\u8bd1\u5728\u7ebf\u8f6c\u6362 ts/js/json \u591a\u8bed\u8a00\u6587\u4ef6\u5e76\u6279\u91cf\u751f\u6210\u6216\u63d2\u5165\u6307\u5b9a\u6587\u4ef6\u7684\u63d2\u4ef6\uff0c\u652f\u6301\u589e\u91cf\u66f4\u65b0\uff0c\u53ef\u4f7f\u7528 bash \u7ffb\u8bd1\u5355\u4e2a\u6587\u4ef6\uff0c\u4e5f\u80fd\u96c6\u6210\u5728\u9879\u76ee\u4e2d\u6301\u7eed\u6279\u91cf\u7ffb\u8bd1\uff0c\u652f\u6301\u5355\u6587\u4ef6\u8f6c\u5355\u6587\u4ef6\uff0c\u5355\u6587\u4ef6\u8f6c\u591a\u6587\u4ef6\uff0c\u591a\u6587\u4ef6\u8f6c\u591a\u6587\u4ef6\uff0c\u591a\u6587\u4ef6\u8f6c\u5355\u6587\u4ef6\\n## \u6548\u679c\u6f14\u793a\\n### \u6b63\u5e38\u7ffb\u8bd1\u6548\u679c:\\n\\n![](./img/demo1.gif)\\n\\n### \u538b\u529b\u6d4b\u8bd5(1\u5206\u949f\u5185\u751f\u6210100\u79cd\u8bed\u8a00\u5305):\\n\\n![](./img/demo2.gif)\\n\\n## \u539f\u7406\\n\u63d2\u4ef6\u539f\u7406\u6bd4\u8f83\u7b80\u5355\uff0c\u6838\u5fc3\u662f\u4f7f\u7528 node \u8bfb\u53d6\u6587\u6848\u6587\u4ef6\uff0c\u518d\u5229\u7528 google \u7ffb\u8bd1 API \u7ffb\u8bd1\u6587\u6848\u540e\u6700\u7ec8\u751f\u6210\u6216\u5199\u5165\u7ed3\u679c\uff0c\u5176\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ffb\u8bd1\u524d\u6587\u6848\u5408\u5e76\u548c\u7ffb\u8bd1\u540e\u6587\u6848\u62c6\u5206\u7ec6\u8282\uff0c\u6b64\u64cd\u4f5c\u662f\u7ffb\u8bd1\u901f\u5ea6\u63d0\u5347\u7684\u5173\u952e\\n\\n\u4e0b\u9762\u5199\u4e00\u4e2a\u7b80\u6613\u7248\u65b9\u4fbf\u7406\u89e3\u539f\u7406\\n\\n### \u5b89\u88c5\u4f9d\u8d56\\n\u9996\u5148\u5b89\u88c5\u4ee5\u4e0b 2 \u4e2a\u4f9d\u8d56\uff1a\\n1. `@vitalets/google-translate-api`\uff1a\u7528\u4e8e\u7ffb\u8bd1\u6587\u6848\\n2. `tunnel`\uff1a\u7528\u4e8e\u7f51\u7edc\u4ee3\u7406\uff08\u5927\u9646\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528 Google API\uff09\\n\\n\u6ce8\u610f\u7248\u672c\uff0ces6 \u548c conmonjs \u6a21\u5757\u5316\u4e0b\u8f7d\u7684\u7248\u672c\u4e0d\u540c\uff0c\u65b9\u4fbf\u6f14\u793a\uff0c\u4ee5 conmonjs \u4e3a\u4f8b\\n\\n```bash\\nnpm i @vitalets/google-translate-api@8.0.0\\nnpm i tunnel@0.0.6\\n```\\n\\n### \u7f16\u5199\u7ffb\u8bd1\u811a\u672c\\n\\n```js\\nconst fs = require(\'fs\')\\nconst tunnel = require(\'tunnel\')\\nconst google = require(\'@vitalets/google-translate-api\')\\n\\nconst googleTranslator = (text) => google(\\n  text,\\n  { from: \'en\', to: \'zh-CN\' },\\n  {\\n    agent: tunnel.httpsOverHttp({\\n      proxy: {\\n        host: \'127.0.0.1\',// \u4ee3\u7406 ip\\n        port: 7890, // \u4ee3\u7406 port\\n        headers: {\\n          \'User-Agent\': \'Node\'\\n        }\\n      }\\n    })\\n  }\\n)\\n// \u8bfb\u53d6 json \u6587\u6848\u6587\u4ef6\\nconst sourceJson = require(\'./en.json\')\\n// \u5b9a\u4e49\u7ffb\u8bd1\u65b9\u6cd5\\nconst translateRun = async (inputJson) => {\\n  const sourceKeyValues = Object.entries(inputJson)\\n  const resultJson = {}\\n  for (let i = 0; i < sourceKeyValues.length; i++) {\\n    const [key, value] = sourceKeyValues[i]\\n    const { text } = await googleTranslator(value)\\n    resultJson[key] = text\\n  }\\n  return resultJson\\n}\\n// \u5c06\u7ffb\u8bd1\u7ed3\u679c\u5199\u5165\u786c\u76d8\\ntranslateRun(sourceJson).then(resultJson => {\\n  fs.writeFileSync(\'./zh.json\', JSON.stringify(resultJson))\\n})\\n```\\n\u5c06\u6587\u6848\u653e\u5165 en.json \u4f8b\u5982\uff1a\\n```json\\n{\\n  \\"hello\\": \\"hello\\"\\n}\\n```\\n\u6267\u884c\u6b64\u811a\u672c\u5c31\u4f1a\u53d1\u73b0\u76ee\u5f55\u4e0b\u751f\u6210\u4e86 zh.json \u7684\u7ffb\u8bd1\u7ed3\u679c\uff1a\\n```json\\n{\\"hello\\":\\"\u4f60\u597d\\"}\\n```\\n\u4f46\u662f\u73b0\u5728\u8fd8\u4e0d\u80fd\u9012\u5f52\u7ffb\u8bd1 json \u5185\u5bb9\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a key \u90fd\u8c03\u7528\u4e86\u4e00\u6b21\u63a5\u53e3\\n\\n\u5148\u5b8c\u6210\u9012\u5f52\u529f\u80fd\uff0c\u9012\u5f52\u7ffb\u8bd1\u7684\u5b9e\u73b0\u65b9\u6848\u6709\u591a\u79cd\uff0c\u8003\u8651\u5230\u540e\u671f\u6587\u6848\u5408\u5e76/\u62c6\u5206\u51cf\u5c11 API \u8c03\u7528\u9891\u7387\uff0c\u8fd9\u91cc\u91c7\u7528 json \u6241\u5e73\u5316\u7684\u65b9\u6cd5\\n\\n### \u7f16\u5199\u6241\u5e73\u5316\u548c\u53cd\u6241\u5e73\u5316\u65b9\u6cd5\\n\\n```js\\nconst flattenObject = (obj, prefix = \'\') => {\\n  let result = {}\\n  for (const key in obj) {\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\\n      const nestedKey = prefix.length > 0 ? `${prefix}/${key}` : key\\n      if (typeof obj[key] === \'object\' && obj[key] !== null) {\\n        const nestedObj = flattenObject(obj[key], nestedKey)\\n        result = { ...result, ...nestedObj }\\n      } else {\\n        result[nestedKey] = obj[key]\\n      }\\n    }\\n  }\\n  return result\\n}\\n\\nconst unflattenObject = (obj) => {\\n  const result = {}\\n  for (const key in obj) {\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\\n      const nestedKeys = key.split(\'/\')\\n      let nestedObj = result\\n      for (let i = 0; i < nestedKeys.length; i++) {\\n        const nestedKey = nestedKeys[i]\\n        if (!Object.prototype.hasOwnProperty.call(nestedObj, nestedKey)) {\\n          nestedObj[nestedKey] = {}\\n        }\\n        if (i === nestedKeys.length - 1) {\\n          nestedObj[nestedKey] = obj[key]\\n        }\\n        nestedObj = nestedObj[nestedKey]\\n      }\\n    }\\n  }\\n  return result\\n}\\n\\n```\\n\u6241\u5e73\u5316\u65b9\u6cd5\u7684\u5982\u4f55\u5b9e\u73b0\u9012\u5f52\u7ffb\u8bd1\uff1f\u4f8b\u5982\u4ece\u4f20\u5165\uff1a\\n```js\\nconst inputJson = {\\n  \\"hello\\": \\"hello\\",\\n  \\"colors\\": {\\n    \\"red\\": \\"red\\"\\n  }\\n}\\nflattenObject(inputJson) // { hello: \'hello\', \'colors/red\': \'red\' }\\n// \u6b64\u65f6\u8fdb\u884c\u7ffb\u8bd1\uff0c\u4f8b\u5982\u7ed3\u679c\u662f { hello: \'\u4f60\u597d\', \'colors/red\': \'\u7ea2\u8272\u7684\' }\\n// \u518d\u8fdb\u884c\u53cd\u6241\u5e73\u5316\\nunflattenObject(resultJson) // {\\"hello\\":\\"\u4f60\u597d\\",\\"colors\\":{\\"red\\":\\"\u7ea2\u8272\u7684\\"}}\\n```\\n\u641e\u61c2\u6241\u5e73\u5316\u539f\u7406\u540e\u63a5\u7740\u6539\u9020 `translateRun` \u65b9\u6cd5\uff1a\\n```js\\nconst translateRun = async (inputJson) => {\\n  inputJson = flattenObject(inputJson)\\n  const sourceKeyValues = Object.entries(inputJson)\\n  const resultJson = {}\\n  for (let i = 0; i < sourceKeyValues.length; i++) {\\n    const [key, value] = sourceKeyValues[i]\\n    const { text } = await googleTranslator(value)\\n    resultJson[key] = text\\n  }\\n  return unflattenObject(resultJson)\\n}\\n```\\n\u73b0\u5728\u5df2\u7ecf\u80fd\u8fdb\u884c\u9012\u5f52\u7ffb\u8bd1\u4e86\uff0c\u63a5\u4e0b\u6765\u8fdb\u884c\u7ffb\u8bd1\u524d\u6587\u6848\u5408\u5e76\u548c\u7ffb\u8bd1\u540e\u6587\u6848\u62c6\u5206\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11 API \u8c03\u7528\u9891\u7387\uff0c\u4e5f\u662f\u5927\u5927\u63d0\u9ad8\u7ffb\u8bd1\u901f\u5ea6\u7684\u6838\u5fc3\\n### \u7ffb\u8bd1\u63d0\u901f\\n\u7ee7\u7eed\u6539\u9020 `translateRun` \u65b9\u6cd5\uff1a\\n```js\\nconst translateRun = async (inputJson) => {\\n  inputJson = flattenObject(inputJson)\\n  let chunkValuesLength = 0\\n  let chunk = []\\n  const chunks = []\\n  const sourceKeyValues = Object.entries(inputJson)\\n  sourceKeyValues.forEach(([key, value]) => {\\n    // Google \u7ffb\u8bd1\u5355\u6b21\u6700\u5927\u5b57\u7b26\u957f\u5ea6 5000 \u5b57, 5 \u4e3a\u5360\u4f4d\u5206\u9694\u7b26\u957f\u5ea6\\n    if (chunkValuesLength + value.length + 5 >= 5000) {\\n      chunks.push(chunk)\\n      chunkValuesLength = 0\\n      chunk = []\\n    } else {\\n      chunk.push({ key, value })\\n      chunkValuesLength += (value.length + 5)\\n    }\\n  })\\n  if (chunk.length > 0) {// \u904d\u5386\u5b8c\u540e\u68c0\u67e5\u4e0d\u6ee1 5000 \u5b57\u7b26\u7684\u9057\u7559\\n    chunks.push(chunk)\\n    chunkValuesLength = 0\\n    chunk = []\\n  }\\n  const resultJson = {}\\n  for (let i = 0; i < chunks.length; i++) {\\n    const chunk = chunks[i]\\n    const mergeText = chunk.map(v => v.value).join(\'\\\\n###\\\\n\')// \u5408\u5e76\u6587\u6848\\n    const { text } = await googleTranslator(mergeText)\\n    const resultValues = text.split(/\\\\n *# *# *# *\\\\n/).map((v) => v.trim())// \u62c6\u5206\u6587\u6848\\n    if (chunk.length !== resultValues.length) {\\n      throw new Error(\'\u7ffb\u8bd1\u524d\u6587\u6848\u788e\u7247\u957f\u5ea6\u548c\u7ffb\u8bd1\u540e\u7684\u4e0d\u4e00\u81f4\')\\n    }\\n    chunk.forEach(({ key }, index) => {\\n      resultJson[key] = resultValues[index]\\n    })\\n  }\\n  return unflattenObject(resultJson)\\n}\\n```\\n\\n\u73b0\u5728\u653e\u5165\u5927\u91cf\u6587\u6848\u5728 en.json \u6587\u4ef6\uff0c\u6267\u884c\u7ffb\u8bd1\u811a\u672c\uff0c\u5047\u5982\u6587\u6848\u6709 1000 \u4e2a key \u539f\u672c\u9700\u8981\u8c03\u7528 1000 \u6b21\u63a5\u53e3\uff0c\u73b0\u5728\u4e0d\u5230 10 \u6b21\u751a\u81f3\u4e0d\u5230 5 \u6b21\u5373\u53ef\u7ffb\u8bd1\u5b8c\u6210\u3002\\n\\n\u5b8c\u6574 demo:\\n\\n```js\\nconst fs = require(\'fs\')\\nconst tunnel = require(\'tunnel\')\\nconst google = require(\'@vitalets/google-translate-api\')\\n\\nconst flattenObject = (obj, prefix = \'\') => {\\n  let result = {}\\n  for (const key in obj) {\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\\n      const nestedKey = prefix.length > 0 ? `${prefix}/${key}` : key\\n      if (typeof obj[key] === \'object\' && obj[key] !== null) {\\n        const nestedObj = flattenObject(obj[key], nestedKey)\\n        result = { ...result, ...nestedObj }\\n      } else {\\n        result[nestedKey] = obj[key]\\n      }\\n    }\\n  }\\n  return result\\n}\\n\\nconst unflattenObject = (obj) => {\\n  const result = {}\\n  for (const key in obj) {\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\\n      const nestedKeys = key.split(\'/\')\\n      let nestedObj = result\\n      for (let i = 0; i < nestedKeys.length; i++) {\\n        const nestedKey = nestedKeys[i]\\n        if (!Object.prototype.hasOwnProperty.call(nestedObj, nestedKey)) {\\n          nestedObj[nestedKey] = {}\\n        }\\n        if (i === nestedKeys.length - 1) {\\n          nestedObj[nestedKey] = obj[key]\\n        }\\n        nestedObj = nestedObj[nestedKey]\\n      }\\n    }\\n  }\\n  return result\\n}\\n\\nconst googleTranslator = (text) => google(\\n  text,\\n  { from: \'en\', to: \'zh-CN\' },\\n  {\\n    agent: tunnel.httpsOverHttp({\\n      proxy: {\\n        host: \'127.0.0.1\',// \u4ee3\u7406 ip\\n        port: 7890, // \u4ee3\u7406 port\\n        headers: {\\n          \'User-Agent\': \'Node\'\\n        }\\n      }\\n    })\\n  }\\n)\\n// \u8bfb\u53d6 json \u6587\u6848\u6587\u4ef6\\nconst sourceJson = require(\'./en.json\')\\n// \u5b9a\u4e49\u7ffb\u8bd1\u65b9\u6cd5\\nconst translateRun = async (inputJson) => {\\n  inputJson = flattenObject(inputJson)\\n  let chunkValuesLength = 0\\n  let chunk = []\\n  const chunks = []\\n  const sourceKeyValues = Object.entries(inputJson)\\n  sourceKeyValues.forEach(([key, value]) => {\\n    // Google \u7ffb\u8bd1\u5355\u6b21\u6700\u5927\u5b57\u7b26\u957f\u5ea6 5000 \u5b57, 5 \u4e3a\u5360\u4f4d\u5206\u9694\u7b26\u957f\u5ea6\\n    if (chunkValuesLength + value.length + 5 >= 5000) {\\n      chunks.push(chunk)\\n      chunkValuesLength = 0\\n      chunk = []\\n    } else {\\n      chunk.push({ key, value })\\n      chunkValuesLength += (value.length + 5)\\n    }\\n  })\\n  if (chunk.length > 0) {// \u904d\u5386\u5b8c\u540e\u68c0\u67e5\u4e0d\u6ee1 5000 \u5b57\u7b26\u7684\u9057\u7559\\n    chunks.push(chunk)\\n    chunkValuesLength = 0\\n    chunk = []\\n  }\\n  const resultJson = {}\\n  for (let i = 0; i < chunks.length; i++) {\\n    const chunk = chunks[i]\\n    const mergeText = chunk.map(v => v.value).join(\'\\\\n###\\\\n\')// \u5408\u5e76\u6587\u6848\\n    const { text } = await googleTranslator(mergeText)\\n    const resultValues = text.split(/\\\\n *# *# *# *\\\\n/).map((v) => v.trim())// \u62c6\u5206\u6587\u6848\\n    if (chunk.length !== resultValues.length) {\\n      throw new Error(\'\u7ffb\u8bd1\u524d\u6587\u6848\u788e\u7247\u957f\u5ea6\u548c\u7ffb\u8bd1\u540e\u7684\u4e0d\u4e00\u81f4\')\\n    }\\n    chunk.forEach(({ key }, index) => {\\n      resultJson[key] = resultValues[index]\\n    })\\n  }\\n  return unflattenObject(resultJson)\\n}\\n// \u5c06\u7ffb\u8bd1\u7ed3\u679c\u5199\u5165\u786c\u76d8\\ntranslateRun(sourceJson).then(resultJson => {\\n  fs.writeFileSync(\'./zh.json\', JSON.stringify(resultJson))\\n})\\n```\\n\\n## \u7ed3\u8bed\\n\u6709\u4e86\u6838\u5fc3\u601d\u8def\uff0c\u5176\u4ed6\u7684\u5c31\u662f\u7ec6\u8282\u5b8c\u5584\u4ee5\u53ca\u4e0d\u65ad\u6392\u5751\u4e86\uff0c\u4f8b\u5982\u5408\u5e76\u62c6\u5206\u6587\u6848\u7684\u7279\u6b8a\u5b57\u7b26\u5728\u4e0d\u540c\u8bed\u8a00\u4f1a\u6709\u5f02\u5e38\uff0c\u6240\u4ee5\u9700\u8981\u6d4b\u8bd5\u51fa\u4e0d\u540c\u8bed\u8a00\u6240\u652f\u6301\u7684\u7279\u6b8a\u5b57\u7b26\u62c6\u5206\u65b9\u6cd5\uff0c\u5728\u7ffb\u8bd1\u65f6\u6839\u636e\u4e0d\u540c\u8bed\u8a00\u4f7f\u7528\u4e0d\u540c\u7684\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u5206\u5272\uff0c\u4ee5\u53ca\u65ad\u70b9\u518d\u7eed\uff08\u6587\u6848\u592a\u957f\uff0c\u7ffb\u8bd1\u4e2d\u65ad\u5bfc\u81f4\u6d6a\u8d39\u5df2\u7ffb\u8bd1\u7684\u6587\u6848\uff09\u3001\u589e\u91cf\u66f4\u65b0\u7b49\u7b49\uff0c\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u54e6~"},{"id":"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","metadata":{"permalink":"/blog/blog/React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","source":"@site/blog/2022-05-30-React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3/index.md","title":"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","description":"\u524d\u8a00","date":"2022-05-30T00:00:00.000Z","formattedDate":"2022\u5e745\u670830\u65e5","tags":[{"label":"React","permalink":"/blog/blog/tags/react"},{"label":"React\u6027\u80fd\u4f18\u5316","permalink":"/blog/blog/tags/react\u6027\u80fd\u4f18\u5316"}],"readingTime":13.06,"hasTruncateMarker":false,"authors":[{"name":"hyminghan","title":"\u524d\u7aef\u5de5\u7a0b\u5e08","url":"https://github.com/hymhub","imageURL":"https://github.com/hymhub.png","key":"hyminghan"}],"frontMatter":{"slug":"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","title":"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","authors":["hyminghan"],"tags":["React","React\u6027\u80fd\u4f18\u5316"]},"prevItem":{"title":"Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305","permalink":"/blog/blog/Node\u7ffb\u8bd1i18n\u591a\u8bed\u8a00\u6587\u4ef6\uff0c1\u5206\u949f\u751f\u6210100\u79cd\u8bed\u8a00\u5305"},"nextItem":{"title":"React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848","permalink":"/blog/blog/React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848"}},"content":"## \u524d\u8a00\\n\\n\u5728 React \u5f00\u53d1\u4e2d\u5982\u679c\u4e0d\u53bb\u7ba1\u7ec4\u4ef6\u7684\u91cd\u590d\u6e32\u67d3\u95ee\u9898\uff0c\u9879\u76ee\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u6027\u80fd\u5c06\u4e0d\u582a\u5165\u76ee\uff0c\u4e0b\u9762\u5c06\u4ecb\u7ecd\u9879\u76ee\u4e2d\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u53ca\u89e3\u51b3\u65b9\u6848\uff08\u4ec5 hooks \u7ec4\u4ef6\uff09\u3002\\n\\n## \u9884\u5148\u4e86\u89e3\u6240\u7528\u77e5\u8bc6\\n\\n1. React.memo\\n2. React.useCallback\\n3. React.useMemo\\n4. [useMemoizedFn](https://ahooks.js.org/zh-CN/hooks/use-memoized-fn/)\uff08\u5229\u7528 ref + useMemo \u914d\u5408\u5355\u4f8b\u6a21\u5f0f\u5b9e\u73b0\u6bd4 useCallback \u66f4\u52a0\u597d\u7528\u7684 hook\uff0c\u4e0b\u9762\u4f1a\u63d0\uff0c\u63a8\u8350\u5c1d\u8bd5\uff09\\n\\n\u6ca1\u9519\uff0c\u53ea\u9700\u4f7f\u7528\u4e0a\u9762 4 \u70b9\u5373\u53ef\u89e3\u51b3\u5927\u591a\u6570\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3\u95ee\u9898\uff0c\u800c\u5982\u4f55\u5408\u7406\u53bb\u4f7f\u7528\u5462\uff1f\\n\\n## \u4f8b 1: \u7236\u7ec4\u4ef6\u72b6\u6001\u66f4\u65b0\u5bfc\u81f4\u5b50\u7ec4\u4ef6\u65e0\u6548\u6e32\u67d3\\n\\n```js\\nconst Parent = () => {\\n  const [count, setCount] = useState(0);\\n  const [son1Count, setSon1Count] = useState(0);\\n  const [son2Count, setSon2Count] = useState(0);\\n  return (\\n    <div>\\n      {console.log(\\"Parent render\\")}\\n      <button onClick={() => setCount((v) => v + 1)}>Parent + 1</button>\\n      <button onClick={() => setSon1Count((v) => v + 1)}>Son1 + 1</button>\\n      <button onClick={() => setSon2Count((v) => v + 1)}>Son2 + 1</button>\\n      <h3>Parent: {count}</h3>\\n      <Son1 son1Count={son1Count} />\\n      <Son2 son2Count={son2Count} />\\n    </div>\\n  );\\n};\\nconst Son1 = (props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son1 render\\")}\\n      Son1: {props.son1Count}\\n    </div>\\n  );\\n};\\nconst Son2 = (props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son2 render\\")}\\n      Son2: {props.son2Count}\\n    </div>\\n  );\\n};\\n```\\n\\n![](./img/demo1.gif)\\n\u53ef\u4ee5\u770b\u51fa\uff0c\u65e0\u8bba\u6539\u53d8\u54ea\u4e2a\u503c\uff0c\u6240\u6709\u7ec4\u4ef6\u90fd\u91cd\u65b0\u6e32\u67d3\u4e86\uff0c\u7406\u60f3\u60c5\u51b5\u662f\u6539\u53d8 count \u503c\u5b9e\u9645\u5e76\u4e0d\u9700\u8981 Son1 \u548c Son2 \u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3\uff0c\u6539\u53d8 son1Count \u4e5f\u4e0d\u9700\u8981 Son2 \u91cd\u65b0\u6e32\u67d3\uff0c\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u5b50\u7ec4\u4ef6\u6240\u4f9d\u8d56\u7684\u503c\u6ca1\u53d1\u751f\u53d8\u5316\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u6e32\u67d3\uff0c\u4e0a\u9762\u60c5\u51b5\u53ea\u9700\u5c06\u5b50\u7ec4\u4ef6\u7528 React.memo \u5305\u88f9\u5373\u53ef:\\n\\n```js\\nconst Son1 = React.memo((props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son1 render\\")}\\n      Son1: {props.son1Count}\\n    </div>\\n  );\\n});\\nconst Son2 = React.memo((props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son2 render\\")}\\n      Son2: {props.son2Count}\\n    </div>\\n  );\\n});\\n```\\n\\n![](./img/demo2.gif)\\n\u53ef\u4ee5\u770b\u5230\u8f7b\u677e\u5305\u88f9\u4e00\u4e0b\u5c31\u5df2\u7ecf\u8fbe\u5230\u7406\u60f3\u6548\u679c\uff0cReact.memo \u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u9ad8\u9636\u7ec4\u4ef6(HOC)\uff0c\u901a\u8fc7\u6d45\u6bd4\u8f83(\u6bd4\u8f83\u6808\u5185\u5b58\u4e2d\u7684\u503c) props\u3001state \u548c render \u7684\u5185\u5bb9\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u91cd\u65b0\u6e32\u67d3\u7ec4\u4ef6\u3002\u800c\u6709\u65f6\u5019\u5b50\u7ec4\u4ef6\u4e0d\u5f97\u4e0d\u4f9d\u8d56\u7236\u7ec4\u4ef6\u7684\u503c\uff0c\u4f46\u8fd9\u4e2a\u4f9d\u8d56\u7684\u503c\u53d1\u751f\u6539\u53d8\u53c8\u4e0d\u9700\u8981\u91cd\u65b0\u6e32\u67d3\u7ec4\u4ef6\u600e\u4e48\u529e\uff0c\u63a5\u7740\u770b\u4e0b\u9762\u4f8b 2\u3002\\n\\n## \u4f8b 2: \u81ea\u5b9a\u4e49\u5b50\u7ec4\u4ef6\u662f\u5426\u91cd\u65b0\u6e32\u67d3\\n\\n```js\\nconst Parent = () => {\\n  const [random, setRandom] = useState(Math.random());\\n  const [nowTime, setNowTime] = useState(new Date().toLocaleString());\\n  const timerRef = useRef();\\n  useEffect(() => {\\n    timerRef.current = setInterval(() => {\\n      setRandom(Math.random());\\n    }, 1000);\\n    return () => {\\n      clearInterval(timerRef.current);\\n    };\\n  });\\n  return (\\n    <div>\\n      {console.log(\\"Parent render\\")}\\n      <h3>random: {random}</h3>\\n      <button onClick={() => setNowTime(new Date().toLocaleString())}>\\n        \u70b9\u51fb\u66f4\u65b0\u5b50\u7ec4\u4ef6\\n      </button>\\n      <Son random={random} nowTime={nowTime} />\\n    </div>\\n  );\\n};\\nconst Son = React.memo((props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son render\\")}\\n      <p>\\n        {props.nowTime}\u7236\u7ec4\u4ef6 random \u503c\u4e3a: {props.random}\\n      </p>\\n    </div>\\n  );\\n});\\n```\\n\\n![](./img/demo3.gif)\\n\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u5b50\u7ec4\u4ef6\u4f9d\u8d56\u7236\u7ec4\u4ef6 random \u548c nowTime\uff0c\u800c\u5b50\u7ec4\u4ef6\u7406\u60f3\u662f\u5728\u70b9\u51fb\u6309\u94ae nowTime \u53d1\u751f\u6539\u53d8\u540e \u624d\u91cd\u65b0\u6e32\u67d3\u7ec4\u4ef6\u663e\u793a random \u7684\u503c\uff0c\u4e0d\u9700\u8981\u4e0a\u9762\u90a3\u6837\u5b9e\u65f6\u6e32\u67d3\uff0c\u6b64\u65f6\u53ea\u9700\u8981\u5728 React.memo \u7b2c\u4e8c\u4e2a\u53c2\u6570\u81ea\u5b9a\u4e49\u6e32\u67d3\u89c4\u5219\u5373\u53ef\uff0cReact.memo \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53ef\u9009\u53c2\u6570\uff1a\\n\\n```ts\\nfunction memo<P extends object>(\\n  Component: FunctionComponent<P>,\\n  propsAreEqual?: (\\n    prevProps: Readonly<PropsWithChildren<P>>,\\n    nextProps: Readonly<PropsWithChildren<P>>\\n  ) => boolean\\n): NamedExoticComponent<P>;\\n```\\n\\n\u770b\u51fd\u6570\u7b7e\u540d\u53ef\u77e5\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4f20\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u4f1a\u6709\u4e24\u4e2a\u5f62\u53c2\uff0cprops \u72b6\u6001\u6539\u53d8\u524d\u7684\u503c\u548c\u6539\u53d8\u540e\u7684\u503c\uff0c\u8fd4\u56de\u503c\u4e3a\u4e00\u4e2a\u5e03\u5c14\u503c\uff0ctrue \u7981\u6b62\u91cd\u65b0\u6e32\u67d3\uff0cfalse \u5c06\u91cd\u65b0\u6e32\u67d3\uff0c\u548c\u4ee5\u5f80 class \u7ec4\u4ef6\u4e2d\u7684 shouldComponentUpdate \u751f\u547d\u5468\u671f\u94a9\u5b50\u7528\u6cd5\u5f88\u50cf\uff0c\u4e0b\u9762\u52a0\u5165\u81ea\u5b9a\u4e49\u6e32\u67d3\u5224\u65ad\u6761\u4ef6\uff0c\u5373\u53ea\u5728 props.nowTime \u53d1\u751f\u6539\u53d8\u65f6\u8fdb\u884c\u91cd\u65b0\u6e32\u67d3:\\n\\n```js\\nconst Son = React.memo(\\n  (props) => {\\n    return (\\n      <div>\\n        {console.log(\\"Son render\\")}\\n        <p>\\n          {props.nowTime}\u7236\u7ec4\u4ef6 random \u503c\u4e3a: {props.random}\\n        </p>\\n      </div>\\n    );\\n  },\\n  (prevProps, nextProps) => prevProps.nowTime === nextProps.nowTime\\n);\\n```\\n\\n![](./img/demo4.gif)\\n\u4ece\u4e0a\u56fe\u53ef\u89c1\u53ea\u6709 props.nowTime \u53d1\u751f\u6539\u53d8\u624d\u4f1a\u91cd\u65b0\u6e32\u67d3\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u5224\u65ad\u89c4\u5219\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u8fd8\u6709\u5f88\u591a\u5999\u7528\uff0c\u6bd4\u5982\u4e00\u4e9b\u60c5\u51b5\u53ef\u4ee5\u66ff\u4ee3 useCallback\uff0c\u540e\u9762\u4f1a\u63d0\u4e00\u4e0b\u3002\\n\\n## \u4f8b 3: \u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u65b9\u6cd5(\u72b6\u6001\u63d0\u5347)\u5bfc\u81f4\u5b50\u7ec4\u4ef6\u65e0\u6548\u6e32\u67d3\\n\\n```js\\nconst Parent = () => {\\n  const [count, setCount] = useState(0);\\n  const [sonCount, setSonCount] = useState(0);\\n  const allPlus = () => {\\n    setCount((v) => v + 1);\\n    setSonCount((v) => v + 1);\\n  };\\n  return (\\n    <div>\\n      {console.log(\\"Parent render\\")}\\n      <button onClick={() => setCount((v) => v + 1)}>Parent + 1</button>\\n      <h3>Parent: {count}</h3>\\n      <Son allPlus={allPlus} sonCount={sonCount} />\\n    </div>\\n  );\\n};\\nconst Son = React.memo((props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son render\\")}\\n      <p>Son: {props.sonCount}</p>\\n      <button onClick={props.allPlus}>All + 1</button>\\n    </div>\\n  );\\n});\\n```\\n\\n![](./img/demo5.gif)\\n\u4ece\u63a7\u5236\u53f0\u8f93\u51fa\u53ef\u4ee5\u770b\u89c1\uff0c\u5f53\u4f20\u9012\u4e00\u4e2a\u65b9\u6cd5\u7ed9\u5b50\u7ec4\u4ef6\u65f6\uff0c\u5c31\u7b97\u4f7f\u7528 React.memo \u8fdb\u884c\u5305\u88f9\u4e5f\u4e0d\u6d4e\u4e8e\u4e8b\uff0c\u5bfc\u81f4\u8be5\u95ee\u9898\u51fa\u73b0\u7684\u6839\u672c\u539f\u56e0\u662f\u5f53 count \u53d1\u751f\u6539\u53d8\u5bfc\u81f4\u7236\u7ec4\u4ef6\u53d1\u751f\u91cd\u65b0\u6e32\u67d3\uff0cParent \u7ec4\u4ef6\u672c\u8d28\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u6240\u4ee5 `const allPlus = () => { setCount(count + 1); setSonCount(sonCount + 1); };` \u4e5f\u4f1a\u91cd\u65b0\u6267\u884c\u4e00\u6b21\uff0c\u8fd9\u5c31\u610f\u5473\u7740 allPlus \u5df2\u7ecf\u91cd\u65b0\u8d4b\u503c\uff0c\u6b64\u65f6\u867d\u7136\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c\u5b9e\u9645\u4e0a allPlus \u5728\u6808\u5185\u5b58\u4e2d\u7684\u5730\u5740\u5df2\u7ecf\u6539\u53d8\uff0c\u800c React.memo \u9ed8\u8ba4\u6b63\u662f\u901a\u8fc7\u6d45\u6bd4\u8f83\u51b3\u5b9a\u662f\u5426\u91cd\u65b0\u6e32\u67d3\uff0c\u4e5f\u5c31\u5bfc\u81f4\u53ea\u8981\u7236\u7ec4\u4ef6\u53d1\u751f\u91cd\u7ed8\uff0c\u5b50\u7ec4\u4ef6\u4e00\u5b9a\u4f1a\u8ddf\u7740\u65e0\u6548\u91cd\u7ed8\u3002\\n\u4f7f\u7528 React.useCallback \u7f13\u5b58\u51fd\u6570\u89e3\u51b3\u5b50\u7ec4\u4ef6\u65e0\u6548\u6e32\u67d3\uff0c\u53ea\u9700\u5c06\u4e0a\u9762 allPlus \u65b9\u6cd5\u4f7f\u7528 useCallback \u5305\u88f9\uff1a\\n\\n```js\\nconst allPlus = useCallback(() => {\\n  setCount((v) => v + 1);\\n  setSonCount((v) => v + 1);\\n}, []);\\n```\\n\\n![](./img/demo6.gif)\\n\\n```ts\\nfunction useCallback<T extends (...args: any[]) => any>(\\n  callback: T,\\n  deps: DependencyList\\n): T;\\n```\\n\\n\u4ece useCallback \u51fd\u6570\u7b7e\u540d\u770b\u5230\uff0c\u9700\u8981\u4f20\u9012\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u4f20\u9700\u8981\u7f13\u5b58\u7684\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u662f\u4f9d\u8d56\u503c\uff0c\u5176\u672c\u8d28\u5c31\u662f\u8fd4\u56de\u7684\u662f\u4e00\u4e2a memoized\uff08\u7f13\u5b58\uff09\u51fd\u6570\uff0c\u5728\u4f9d\u8d56\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u591a\u6b21\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u7684\u503c\u662f\u76f8\u540c\u7684\uff0c\u4ed6\u7684\u5b9e\u73b0\u539f\u7406\u662f\u5f53\u4f7f\u7528\u4e00\u7ec4\u53c2\u6570\u521d\u6b21\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u4f1a\u7f13\u5b58\u53c2\u6570\u548c\u8ba1\u7b97\u7ed3\u679c\uff0c\u5f53\u518d\u6b21\u4f7f\u7528\u76f8\u540c\u7684\u53c2\u6570\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u4f1a\u76f4\u63a5\u8fd4\u56de\u76f8\u5e94\u7684\u7f13\u5b58\u7ed3\u679c\uff0c\u4e0a\u9762\u4f8b\u5b50\u4f9d\u8d56\u503c\u4e3a\u7a7a\u6570\u7ec4\uff0c\u6240\u4ee5\u65e0\u8bba\u600e\u6837 allPlus \u6808\u5185\u5b58\u503c\u90fd\u4e0d\u4f1a\u53d8\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u89e6\u53d1\u5b50\u7ec4\u4ef6\u65e0\u6548\u91cd\u7ed8\u3002\\n\u5728\u5411\u5b50\u7ec4\u4ef6\u4f20\u9012\u65b9\u6cd5\u65f6\u5728\u9879\u76ee\u4e2d\u5f88\u591a\u65f6\u5019\u4f1a\u61d2\u5f97\u4e13\u95e8\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5b50\u7ec4\u4ef6\uff0c\u4f8b\u5982\uff1a\\n\\n```js\\n<Son\\n  onClick={() => {\\n    setCount((v) => v + 1);\\n    setSonCount((v) => v + 1);\\n  }}\\n  sonCount={sonCount}\\n/>\\n```\\n\\n\u5982\u679c\u4e0d\u4f1a\u6709\u6027\u80fd\u5f71\u54cd\u81ea\u7136\u65e0\u6240\u8c13\uff0c\u4f46\u82e5\u662f\u89e6\u53d1\u65e0\u6548\u91cd\u7ed8\u5c31\u9700\u8981\u8003\u8651\u4e86\u3002\\n**\u6ce8\u610f:** \u4f9d\u8d56\u503c\u4e00\u5b9a\u8981\u8c28\u614e\u5904\u7406\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8bbe\u5b9a\uff0c\u4f8b\u5982\u4e0a\u9762\u4f8b\u5b50 allPlus \u4e2d setState \u90fd\u662f\u91c7\u7528\u56de\u8c03\u51fd\u6570\u4f20\u53c2\uff0c\u5047\u5982\u6539\u6210\u76f4\u63a5\u4f20\u53c2\uff0c\u800c\u53c8\u4e0d\u7ed9\u5b9a\u4f9d\u8d56\u503c\uff0c\u5c31\u4f1a\u9020\u6210\u7f13\u5b58\u7684\u51fd\u6570\u4e2d\u65e0\u6cd5\u83b7\u53d6\u6700\u65b0\u503c\uff0c\u4f8b\u5982\u4e0a\u8ff0\u4f8b\u5b50 allPlus \u6539\u4e3a\uff1a\\n\\n```js\\nconst allPlus = useCallback(() => {\\n  setCount(count + 1);\\n  setSonCount(sonCount + 1);\\n}, []);\\n```\\n\\n![](./img/demo7.gif)\\n\u5f88\u660e\u663e\u770b\u5230 All + 1 \u540e setCount \u4e2d count \u5e76\u4e0d\u662f\u6700\u65b0\u503c\uff0c\u800c\u662f\u4e0a\u4e00\u6b21\u7f13\u5b58\u51fd\u6570\u65f6\u7684\u503c\uff0c\u6240\u4ee5\u7f13\u5b58\u51fd\u6570\u5728\u6dfb\u52a0\u4f9d\u8d56\u65f6\u9700\u8981\u89c6\u60c5\u51b5\u800c\u5b9a\uff0c\u5426\u5219\u51fa\u73b0 bug \u6392\u67e5\u8d77\u6765\u65f6\u53ef\u80fd\u4f1a\u4ee4\u4eba\u5934\u75db\u4e0d\u5df2\uff0c\\n\\n### \u63a8\u8350\u5c1d\u8bd5 useMemoizedFn\\n\\n\u4e0a\u9762 useCallback \u89e3\u51b3\u7684\u95ee\u9898\u53ef\u4ee5\u88ab ahooks \u4e2d\u7684 [useMemoizedFn](https://ahooks.js.org/zh-CN/hooks/use-memoized-fn/)\uff08\u70b9\u51fb[useMemoizedFn](https://ahooks.js.org/zh-CN/hooks/use-memoized-fn/)\u53bb\u770b\u5b98\u65b9\u4f8b\u5b50\uff09\u5b8c\u5168\u66ff\u4ee3\uff0c\u53ea\u9700\u8981\u5c06\u4e0a\u9762\u7684 allPlus \u65b9\u6cd5\u4f7f\u7528 useMemoizedFn \u8fdb\u884c\u5305\u88f9\u5373\u53ef\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4f20\u4f9d\u8d56\uff0c\u8fd9\u4e2a hook \u8bbe\u8ba1\u5f88\u597d\uff0cReact \u5b98\u65b9\u63d0\u6848\u5f04\u4e2a useEvent \u6211\u60f3\u5c31\u7c7b\u4f3c useMemoizedFn \u8fd9\u79cd\u4e86\u5427\uff0c\u770b\u770b\u5b83\u7684\u6e90\u7801\uff1a\\n\\n```js\\nfunction useMemoizedFn(fn) {\\n  if (process.env.NODE_ENV === \\"development\\") {\\n    // \u6d4b\u8bd5\u73af\u5883\u53c2\u6570\u7c7b\u578b\u5224\u65ad\\n    if (!utils_1.isFunction(fn)) {\\n      console.error(\\n        \\"useMemoizedFn expected parameter is a function, got \\" + typeof fn\\n      );\\n    }\\n  }\\n\\n  var fnRef = react_1.useRef(fn); // why not write `fnRef.current = fn`?\\n  // https://github.com/alibaba/hooks/issues/728\\n  // \u8fd9\u91cc\u76f8\u5f53\u5de7\u5999\u7684\u5229\u7528 Ref \u914d\u5408 useMemo \u53bb\u7f13\u5b58\u65b9\u6cd5\u4f7f\u5185\u90e8\u80fd\u62ff\u5230\u6700\u65b0\u503c\u8fd8\u4e0d\u7528\u4f20\u624b\u52a8\u4f20\u4f9d\u8d56\\n  fnRef.current = react_1.useMemo(\\n    function () {\\n      return fn;\\n    },\\n    [fn]\\n  );\\n  var memoizedFn = react_1.useRef();\\n  // \u8fd9\u91cc\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u8ba9\u8fd4\u56de\u51fa\u53bb\u7684\u65b9\u6cd5\u5b9e\u4f8b\u5316\u540e\u5f15\u7528\u5730\u5740\u6c38\u8fdc\u4e0d\u53d8\uff0c\u5728\u8c03\u7528\u7684\u65f6\u5019\u518d\u53bb\u7528\u4e0a\u9762\u7684 fnRef\uff0c\\n  // \u4e0d\u4ec5\u89e3\u51b3\u4e86\u91cd\u590d\u6e32\u67d3\uff0c\u8fde\u5185\u90e8\u5f15\u7528\u72b6\u6001\u66f4\u65b0\u90fd\u4e0d\u7528\u91cd\u590d\u6e32\u67d3\uff0c\u8fd9\u8bbe\u8ba1\u7684\u786e\u5389\u5bb3\u3002\\n  if (!memoizedFn.current) {\\n    memoizedFn.current = function () {\\n      var args = [];\\n\\n      for (var _i = 0; _i < arguments.length; _i++) {\\n        args[_i] = arguments[_i];\\n      }\\n\\n      return fnRef.current.apply(this, args);\\n    };\\n  }\\n\\n  return memoizedFn.current;\\n}\\n```\\n\\n## \u4f8b 4: \u5999\u7528 React.memo \u6216 React.useMemo \u9632\u6b62\u5b50\u7ec4\u4ef6\u65e0\u6548\u6e32\u67d3\\n\\n\u5c06\u4f8b 3 \u4e2d allPlus \u65b9\u6cd5\u4e0d\u4f7f\u7528 useCallback \u7f13\u5b58\uff0c\u901a\u8fc7\u5b50\u7ec4\u4ef6 React.memo \u7b2c\u4e8c\u4e2a\u53c2\u6570\u81ea\u5b9a\u4e49\u6e32\u67d3\u89c4\u5219\u8fbe\u5230\u76ee\u7684\uff1a\\n\\n```js\\nconst Parent = () => {\\n  const [count, setCount] = useState(0);\\n  const [sonCount, setSonCount] = useState(0);\\n  const allPlus = () => {\\n    setCount((v) => v + 1);\\n    setSonCount((v) => v + 1);\\n  };\\n  return (\\n    <div>\\n      {console.log(\\"Parent render\\")}\\n      <button onClick={() => setCount((v) => v + 1)}>Parent + 1</button>\\n      <h3>Parent: {count}</h3>\\n      <Son allPlus={allPlus} sonCount={sonCount} />\\n    </div>\\n  );\\n};\\nconst Son = React.memo(\\n  (props) => {\\n    return (\\n      <div>\\n        {console.log(\\"Son render\\")}\\n        <p>Son: {props.sonCount}</p>\\n        <button onClick={props.allPlus}>All + 1</button>\\n      </div>\\n    );\\n  },\\n  (prevProps, nextProps) => prevProps.sonCount === nextProps.sonCount\\n);\\n```\\n\\n![](./img/demo8.gif)\\n\u4f7f\u7528 useMemo \u7f13\u5b58 allPlus \u65b9\u6cd5\uff0cuseMemo \u548c useCallback \u4e00\u6837\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u56de\u8c03\u51fd\u6570\uff0c\u7b2c\u4e8c\u4e2a\u4f20\u4f9d\u8d56\u503c\uff0c\u5b83\u4eec\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e useMemo \u7f13\u5b58\u7684\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u800c useCallback \u76f4\u63a5\u7f13\u5b58\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u56de\u8c03\u51fd\u6570\uff1a\\n\\n```js\\nconst Parent = () => {\\n  const [count, setCount] = useState(0);\\n  const [sonCount, setSonCount] = useState(0);\\n  const allPlus = useMemo(\\n    () => () => {\\n      // \u6ce8\u610f\u8fd9\u91cc\u4e0d\u540c\u4e8e useCallback\\n      setCount((v) => v + 1);\\n      setSonCount((v) => v + 1);\\n    },\\n    []\\n  );\\n  return (\\n    <div>\\n      {console.log(\\"Parent render\\")}\\n      <button onClick={() => setCount((v) => v + 1)}>Parent + 1</button>\\n      <h3>Parent: {count}</h3>\\n      <Son allPlus={memoizedAllPlus} sonCount={sonCount} />\\n    </div>\\n  );\\n};\\nconst Son = React.memo((props) => {\\n  return (\\n    <div>\\n      {console.log(\\"Son render\\")}\\n      <p>Son: {props.sonCount}</p>\\n      <button onClick={props.allPlus}>All + 1</button>\\n    </div>\\n  );\\n});\\n```\\n\\n\u8fd9\u6837\u4e5f\u80fd\u8fbe\u5230\u6548\u679c\uff0c\u4f46\u4e0d\u5efa\u8bae\u8fd9\u6837\u64cd\u4f5c\uff0c\u56e0\u4e3a useMemo \u5728\u8bbe\u8ba1\u4e0a\u5b9e\u9645\u7528\u5904\u5728\u4e8e\u7f13\u5b58\u6570\u636e\uff0c\u4f8b\u5982\u5bf9\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u636e\u505a\u4e8c\u6b21\u5904\u7406\uff0c\u907f\u514d\u6bcf\u6b21\u6e32\u67d3\u505a\u65e0\u610f\u4e49\u7684\u8ba1\u7b97\u5bfc\u81f4\u6027\u80fd\u964d\u4f4e\uff0c\u800c useCallback \u624d\u662f\u4e3a\u7f13\u5b58\u51fd\u6570\u800c\u751f\u3002\\n\\n## \u603b\u7ed3\\n\\n\u867d\u7136\u770b\u4e0a\u53bb\u53ea\u7528\u4e86 React.memo\u3001React.useCallback\u3001React.useMemo \u8fd9\u4e09\u4e2a\uff0c\u751a\u81f3 React.useMemo \u90fd\u7b97\u4e0d\u4e0a\u5c31\u80fd\u5904\u7406\u7ec4\u4ef6\u7684\u91cd\u590d\u6e32\u67d3\u95ee\u9898\uff0c\u4f46\u5728\u5b9e\u9645\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u8003\u8651\u7684\u56e0\u7d20\u4e5f\u4e0d\u5c11\uff0c\u5f53\u7136\u6709\u65f6\u5019\u751a\u81f3\u4e5f\u53ef\u4ee5\u4e0d\u7528\u53bb\u7ba1\u91cd\u590d\u6e32\u67d3\u95ee\u9898\uff0c\u4f8b\u5982\u4e00\u4e2a\u9875\u9762\u4e2d\u7ec4\u4ef6\u62c6\u5206\u7684\u5c11\uff0c\u4e1a\u52a1\u5e76\u4e0d\u590d\u6742\uff0c\u6b64\u65f6\u770b\u89c1\u51fd\u6570\u5c31\u53bb\u7f13\u5b58\uff0c\u770b\u89c1\u7ec4\u4ef6\u5c31\u7528 React.memo \u5305\u88f9\uff0c\u8fd9\u6837\u6027\u80fd\u6ca1\u4ec0\u4e48\u53d8\u5316\u53cd\u800c\u662f\u753b\u86c7\u6dfb\u8db3\u3002\u53e6\u5916\u82e5\u9879\u76ee\u590d\u6742\u4f46\u76f2\u76ee\u5927\u91cf\u7684\u53bb\u4f7f\u7528 React.memo\u3001React.useCallback\u3001React.useMemo\uff0c\u4f9d\u8d56\u503c\u6216\u5224\u65ad\u89c4\u5219\u4e0d\u53bb\u7efc\u5408\u5b9e\u9645\u60c5\u51b5\u5904\u7406\uff0c\u5728 debug \u65f6\u5f88\u53ef\u80fd\u4f1a\u8ba9\u4eba\u75db\u4e0d\u6b32\u751f\u4e14\u8fd8\u4f1a\u6709\u5185\u5b58\u6cc4\u9732\u98ce\u9669\uff0c\u6240\u4ee5\u72b6\u6001\u63d0\u5347\u65b9\u9762\u8fd8\u662f\u6bd4\u8f83\u5efa\u8bae\u5408\u7406\u5c1d\u8bd5\u4e0b ahooks \u4e2d\u7684[useMemoizedFn](https://ahooks.js.org/zh-CN/hooks/use-memoized-fn/)\uff0c\u6e90\u7801\u4e5f\u5c31\u90a3\u4e48\u51e0\u53e5\uff0c\u786e\u6709\u5982\u6b64\u5927\u4f5c\u7528\uff01"},{"id":"React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848","metadata":{"permalink":"/blog/blog/React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848","source":"@site/blog/2021-07-09-React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848/index.md","title":"React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848","description":"\u9884\u5148\u4e86\u89e3 setState \u7684\u4e24\u79cd\u4f20\u53c2\u65b9\u5f0f","date":"2021-07-09T00:00:00.000Z","formattedDate":"2021\u5e747\u67089\u65e5","tags":[{"label":"React","permalink":"/blog/blog/tags/react"}],"readingTime":5.68,"hasTruncateMarker":false,"authors":[{"name":"hyminghan","title":"\u524d\u7aef\u5de5\u7a0b\u5e08","url":"https://github.com/hymhub","imageURL":"https://github.com/hymhub.png","key":"hyminghan"}],"frontMatter":{"slug":"React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848","title":"React Hook \u4e2d useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848","authors":["hyminghan"],"tags":["React"]},"prevItem":{"title":"React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3","permalink":"/blog/blog/React\u907f\u514d\u7ec4\u4ef6\u91cd\u590d\u6e32\u67d3"}},"content":"## \u9884\u5148\u4e86\u89e3 setState \u7684\u4e24\u79cd\u4f20\u53c2\u65b9\u5f0f\\n\\n### 1\u3001\u76f4\u63a5\u4f20\u5165\u65b0\u503c setState(options);\\n\\n\u5217\u5982\uff1a\\n\\n```js\\nconst [state, setState] = useState(0);\\nsetState(state + 1);\\n```\\n\\n### 2\u3001\u4f20\u5165\u56de\u8c03\u51fd\u6570 setState(callBack);\\n\\n\u4f8b\u5982\uff1a\\n\\n```js\\nconst [state, setState] = useState(0);\\n// prevState \u662f\u6539\u53d8\u4e4b\u524d\u7684 state \u503c\uff0creturn \u8fd4\u56de\u7684\u503c\u4f1a\u4f5c\u4e3a\u65b0\u72b6\u6001\u8986\u76d6 state \u503c\\nsetState((prevState) => prevState + 1);\\n```\\n\\n## useState \u5f02\u6b65\u56de\u8c03\u83b7\u53d6\u4e0d\u5230\u6700\u65b0\u503c\u53ca\u89e3\u51b3\u65b9\u6848\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b setState \u76f4\u63a5\u4f7f\u7528\u4e0a\u8ff0\u7b2c\u4e00\u79cd\u65b9\u5f0f\u4f20\u53c2\u5373\u53ef\uff0c\u4f46\u5728\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u7b2c\u4e00\u79cd\u65b9\u5f0f\u4f1a\u51fa\u73b0\u5f02\u5e38\uff1b\\n\u4f8b\u5982\u5e0c\u671b\u5728\u5f02\u6b65\u56de\u8c03\u6216\u95ed\u5305\u4e2d\u83b7\u53d6\u6700\u65b0\u72b6\u6001\u5e76\u8bbe\u7f6e\u72b6\u6001\uff0c\u6b64\u65f6\u7b2c\u4e00\u79cd\u65b9\u5f0f\u83b7\u53d6\u7684\u72b6\u6001\u4e0d\u662f\u5b9e\u65f6\u7684\uff0cReact \u5b98\u65b9\u6587\u6863\u63d0\u5230\uff1a\u7ec4\u4ef6\u5185\u90e8\u7684\u4efb\u4f55\u51fd\u6570\uff0c\u5305\u62ec\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u548c Effect\uff0c\u90fd\u662f\u4ece\u5b83\u88ab\u521b\u5efa\u7684\u90a3\u6b21\u6e32\u67d3\u4e2d\u88ab\u300c\u770b\u5230\u300d\u7684\uff0c\u6240\u4ee5\u5f15\u7528\u7684\u503c\u4efb\u7136\u662f\u65e7\u7684\uff0c\u6700\u540e\u5bfc\u81f4 setState \u51fa\u73b0\u5f02\u5e38\uff1a\\n\\n```js\\nimport React, { useState, useEffect } from \\"react\\";\\n\\nconst App = () => {\\n  const [arr, setArr] = useState([0]);\\n\\n  useEffect(() => {\\n    console.log(arr);\\n  }, [arr]);\\n\\n  const handleClick = () => {\\n    Promise.resolve()\\n      .then(() => {\\n        setArr([...arr, 1]); // \u6b64\u65f6\u8d4b\u503c\u524d arr \u4e3a\uff1a[0]\\n      })\\n      .then(() => {\\n        setArr([...arr, 2]); // \u6b64\u65f6\u8d4b\u503c\u524d arr \u4e3a\u65e7\u72b6\u6001\u4ecd\u7136\u4e3a\uff1a[0]\\n      });\\n  };\\n\\n  return (\\n    <>\\n      <button onClick={handleClick}>change</button>\\n    </>\\n  );\\n};\\n\\nexport default App;\\n```\\n\\n\u4e0a\u9762\u4ee3\u7801\uff0cApp \u7ec4\u4ef6\u5b9e\u9645\u4e5f\u662f\u4e2a\u95ed\u5305\u51fd\u6570\uff0chandleClick \u91cc\u9762\u5f15\u7528\u7740 arr\uff0c\u7b2c\u4e00\u6b21 setArr \u540e arr \u7684\u503c\u786e\u5b9e\u66f4\u65b0\u4e86\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u4e0b\u9762\u622a\u56fe\u4e2d\u770b\u5230\uff0c\u4f46\u6b64\u6b21\u6267\u884c\u7684 handleClick \u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4f5c\u7528\u57df\u8fd8\u662f\u65e7\u7684\uff0c\u91cc\u9762\u5f15\u7528\u7684 arr \u4ecd\u7136\u4e3a\u65e7\u7684\uff0c\u5bfc\u81f4\u7b2c\u4e8c\u6b21 setArr \u540e\u7ed3\u679c\u4e3a [0, 2]\uff1a\\n\\n![](./img/demo1.png)\\n\\n\u5728 class \u7ec4\u4ef6\u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 setState(options, callBack); \u5728 setState \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u56de\u8c03\u51fd\u6570\u4e2d\u518d\u6b21\u8fdb\u884c setState\uff0c\u4e5f\u4e0d\u5b58\u5728\u95ed\u5305\u4f5c\u7528\u57df\u95ee\u9898\uff0c\u4f46\u662f React Hook \u4e2d useState \u79fb\u9664\u4e86 setState \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u800c\u4e14\u82e5\u5d4c\u5957\u592a\u591a\u4e5f\u4e0d\u4f73\uff1b\\n\\n### \u89e3\u51b3\u65b9\u6848 1\uff08\u63a8\u8350\u4f7f\u7528\uff09\uff1a\\n\\n\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4f7f\u7528\u7b2c\u4e8c\u79cd\uff08\u56de\u8c03\uff09\u65b9\u5f0f\u4f20\u53c2\\n\\n```js\\nconst handleClick = () => {\\n  Promise.resolve()\\n    .then(() => {\\n      // \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4e0d\u6539\uff0c\u4f7f\u7528\u7b2c\u4e00\u4e2d\u4f20\u53c2\u65b9\u5f0f setArr([...arr, 1]); \u56e0\u4e3a\u8fd9\u91cc\u4e0d\u9700\u8981\u83b7\u53d6\u6700\u65b0\u72b6\u6001\\n      setArr((prevState) => [...prevState, 1]);\\n    })\\n    .then(() => {\\n      // \u8fd9\u91cc\u5fc5\u987b\u6539\u6210\u56de\u8c03\u51fd\u6570\u4f20\u53c2\u65b9\u5f0f\uff0c\u5426\u5219\u4f1a\u8bfb\u53d6\u65e7\u72b6\u6001\uff0c\u5bfc\u81f4\u5f02\u5e38\\n      setArr((prevState) => [...prevState, 2]);\\n    });\\n};\\n```\\n\\n![](./img/demo2.png)\\n\\n### \u89e3\u51b3\u65b9\u6848 2\uff1a\\n\\n\u4f7f\u7528 useReducer \u4eff\u9020\u7c7b\u7ec4\u4ef6\u4e2d\u7684 forceUpdate \u5b9e\u73b0\u7ec4\u4ef6\u5f3a\u5236\u6e32\u67d3\uff1b\\n\\n**\u6ce8\u610f\uff1a** \u6b64\u65b9\u6848\u4ec5\u9650\u4e8e\u53ea\u6709\u9875\u9762\u4f9d\u8d56\u8be5\u6570\u636e\u65f6\u9002\u7528\uff0c\u5982\u679c\u6709\u7c7b\u4f3c useEffect \u7b49 hook \u5728\u76d1\u542c\u8be5\u6570\u636e(\u793a\u4f8b\u4e2d\u7684 arr )\u65f6\u65e0\u6cd5\u5b9e\u65f6\u6355\u6349\u5230\u53d8\u5316\\n\\n```js\\nimport React, { useState, useReducer } from \\"react\\";\\n\\nconst App = () => {\\n  const [arr, setArr] = useState([0]);\\n  const [, forceUpdate] = useReducer((x) => x + 1, 0);\\n\\n  const handleClick = () => {\\n    Promise.resolve()\\n      .then(() => {\\n        arr.push(1); // \u5982\u679c\u8fd9\u91cc\u4e5f\u9700\u8981\u505a\u4e00\u6b21\u6e32\u67d3\u5728\u6539\u53d8\u72b6\u6001\u540e\u8c03\u7528 forceUpdate() \u5373\u53ef\\n      })\\n      .then(() => {\\n        arr.push(2);\\n        forceUpdate();\\n      });\\n  };\\n\\n  return (\\n    <>\\n      <h1>{arr.toString()}</h1>\\n      <button onClick={handleClick}>change</button>\\n    </>\\n  );\\n};\\n\\nexport default App;\\n```\\n\\n\u70b9\u51fb\u524d\uff1a\\n\\n![](./img/demo3.png)\\n\\n\u70b9\u51fb\u540e\uff1a\\n\\n![](./img/demo4.png)\\n\\n### \u89e3\u51b3\u65b9\u6848 3\uff1a\\n\\n\u5229\u7528 ref \uff0cstate \u53d1\u751f\u6539\u53d8\u540c\u65f6\u5c06\u503c\u6620\u5c04\u5230 ref\\nref \u7684\u6539\u53d8\u4e0d\u4f1a\u89e6\u53d1\u9875\u9762\u66f4\u65b0\uff0c\u4f46\u5728\u5f02\u6b65\u4e2d\u4e00\u5b9a\u80fd\u62ff\u5230\u6700\u65b0\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5728\u9875\u9762\u4e0a\u7528\u5c31\u4f7f\u7528 state\uff0c\u5728\u5f02\u6b65\u903b\u8f91\u4e2d\u7528\u5c31\u4f7f\u7528 ref\\n\\n```js\\nimport React, { useState, useRef, useEffect } from \\"react\\";\\n\\nconst App = () => {\\n  const [arr, setArr] = useState([0]);\\n  let ref = useRef();\\n  useEffect(() => {\\n    ref.current = arr;\\n    console.log(arr);\\n  }, [arr]);\\n\\n  const handleClick = () => {\\n    Promise.resolve()\\n      .then(() => {\\n        const now = [...ref.current, 1];\\n        ref.current = now;\\n        setArr(now);\\n      })\\n      .then(() => {\\n        setArr([...ref.current, 2]);\\n      });\\n  };\\n\\n  return (\\n    <>\\n      <h1>{arr.toString()}</h1>\\n      <button onClick={handleClick}>change</button>\\n    </>\\n  );\\n};\\n\\nexport default App;\\n```\\n\\n![](./img/demo5.png)\\n\\n### \u7ec8\u6781\u65b9\u6848\uff1a\\n\\n\u4e0a\u9762\u4f8b 3 \u8fd9\u7c7b\u65b9\u5f0f\u53ef\u4ee5\u81ea\u5df1\u5c01\u88c5\u4e00\u4e2a hooks \u5c06 state \u548c ref \u8fdb\u884c\u5173\u8054\uff0c\u540c\u65f6\u518d\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u4f9b\u5f02\u6b65\u4e2d\u83b7\u53d6\u6700\u65b0\u503c\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a\\n\\n```js\\nconst useGetState = (initVal) => {\\n  const [state, setState] = useState(initVal);\\n  const ref = useRef(initVal);\\n  const setStateCopy = (newVal) => {\\n    ref.current = newVal;\\n    setState(newVal);\\n  };\\n  const getState = () => ref.current;\\n  return [state, setStateCopy, getState];\\n};\\n\\nconst App = () => {\\n  const [arr, setArr, getArr] = useGetState([0]);\\n  useEffect(() => {\\n    console.log(arr);\\n  }, [arr]);\\n\\n  const handleClick = () => {\\n    Promise.resolve()\\n      .then(() => {\\n        setArr([...getArr(), 1]);\\n      })\\n      .then(() => {\\n        setArr([...getArr(), 2]);\\n      });\\n  };\\n\\n  return (\\n    <>\\n      <h1>{arr.toString()}</h1>\\n      <button onClick={handleClick}>change</button>\\n    </>\\n  );\\n};\\n```\\n\\n\u8fd9\u6837\u770b\u8d77\u6765\u66f4\u52a0\u6613\u4e8e\u9605\u8bfb\uff0c\u5f02\u6b65\u4e2d\u83b7\u53d6\u6700\u65b0\u503c\u5c31\u901a\u8fc7\u8c03\u7528 getArr\uff0c\u540c\u65f6 ahooks \u4e2d\u4e5f\u540c\u6837\u63d0\u4f9b\u4e86\u8fd9\u79cd hooks [https://ahooks.js.org/zh-CN/hooks/use-get-state/](https://ahooks.js.org/zh-CN/hooks/use-get-state/)\uff0c\u6216\u8005\u662f\u53e6\u4e00\u79cd\uff1a [https://ahooks.js.org/zh-CN/hooks/use-latest/](https://ahooks.js.org/zh-CN/hooks/use-latest/)\uff0c\u5176\u539f\u7406\u90fd\u5927\u540c\u5c0f\u5f02\u3002\\n\\n\u6700\u540e\u5728\u9644\u4e0a\u5b98\u65b9\u76f8\u5173\u89e3\u91ca\u6587\u6863\uff1a[\u4e3a\u4ec0\u4e48\u6211\u4f1a\u5728\u6211\u7684\u51fd\u6570\u4e2d\u770b\u5230\u9648\u65e7\u7684 props \u548c state \uff1f](https://zh-hans.reactjs.org/docs/hooks-faq.html#why-am-i-seeing-stale-props-or-state-inside-my-function)"}]}')}}]);